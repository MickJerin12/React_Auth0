{"ast":null,"code":"import _objectWithoutProperties from \"/Users/mickjerin/Securing React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mickjerin/Securing React/src/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport AuthContext from \"./AuthContext\";\n\nfunction PrivateRoute(_ref) {\n  var _this = this;\n\n  var Component = _ref.component,\n      scopes = _ref.scopes,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"scopes\"]);\n\n  return /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, function (auth) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      render: function render(props) {\n        // 1. Redirect to login if not logged in.\n        if (!auth.isAuthenticated()) return auth.login(); // 2. Display message if user lacks required scope(s).\n\n        if (scopes.length > 0 && !auth.userHasScopes(scopes)) {\n          return /*#__PURE__*/React.createElement(\"h1\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }\n          }, \"Unauthorized - You need the following scope(s) to view this page: \", scopes.join(\",\"), \".\");\n        } // 3. Render component\n\n\n        return /*#__PURE__*/React.createElement(Component, Object.assign({\n          auth: auth\n        }, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 20\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }));\n  });\n}\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  scopes: PropTypes.array\n};\nPrivateRoute.defaultProps = {\n  scopes: []\n};\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/mickjerin/Securing React/src/PrivateRoute.js"],"names":["React","Route","PropTypes","AuthContext","PrivateRoute","Component","component","scopes","rest","auth","props","isAuthenticated","login","length","userHasScopes","join","propTypes","func","isRequired","array","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,YAAT,OAAiE;AAAA;;AAAA,MAA9BC,SAA8B,QAAzCC,SAAyC;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,MAARC,IAAQ;;AAC/D,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAC,IAAI;AAAA,wBACH,oBAAC,KAAD,oBACMD,IADN;AAEE,MAAA,MAAM,EAAE,gBAAAE,KAAK,EAAI;AACf;AACA,YAAI,CAACD,IAAI,CAACE,eAAL,EAAL,EAA6B,OAAOF,IAAI,CAACG,KAAL,EAAP,CAFd,CAIf;;AACA,YAAIL,MAAM,CAACM,MAAP,GAAgB,CAAhB,IAAqB,CAACJ,IAAI,CAACK,aAAL,CAAmBP,MAAnB,CAA1B,EAAsD;AACpD,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAESA,MAAM,CAACQ,IAAP,CAAY,GAAZ,CAFT,MADF;AAMD,SAZc,CAcf;;;AACA,4BAAO,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAEN;AAAjB,WAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADG;AAAA,GADP,CADF;AA0BD;;AAEDN,YAAY,CAACY,SAAb,GAAyB;AACvBV,EAAAA,SAAS,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADH;AAEvBX,EAAAA,MAAM,EAAEL,SAAS,CAACiB;AAFK,CAAzB;AAKAf,YAAY,CAACgB,YAAb,GAA4B;AAC1Bb,EAAAA,MAAM,EAAE;AADkB,CAA5B;AAIA,eAAeH,YAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport AuthContext from \"./AuthContext\";\n\nfunction PrivateRoute({ component: Component, scopes, ...rest }) {\n  return (\n    <AuthContext.Consumer>\n      {auth => (\n        <Route\n          {...rest}\n          render={props => {\n            // 1. Redirect to login if not logged in.\n            if (!auth.isAuthenticated()) return auth.login();\n\n            // 2. Display message if user lacks required scope(s).\n            if (scopes.length > 0 && !auth.userHasScopes(scopes)) {\n              return (\n                <h1>\n                  Unauthorized - You need the following scope(s) to view this\n                  page: {scopes.join(\",\")}.\n                </h1>\n              );\n            }\n\n            // 3. Render component\n            return <Component auth={auth} {...props} />;\n          }}\n        />\n      )}\n    </AuthContext.Consumer>\n  );\n}\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  scopes: PropTypes.array\n};\n\nPrivateRoute.defaultProps = {\n  scopes: []\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}